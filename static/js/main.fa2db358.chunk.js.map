{"version":3,"sources":["Valute/Valute.js","Chart/Chart.js","Store/data.js","Store/api.js","App.js","reportWebVitals.js","Store/valute-reducer.js","Store/store.js","Store/date-reducer.js","index.js"],"names":["Valute","props","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","rgb","dispatch","type","payload","charCode","hex","r","g","b","a","styles","reactCSS","background","this","Card","Body","className","onClick","style","onChange","name","Form","Check","e","checked","Component","connect","valutes","forEach","valute","Chart","series","chartData","map","item","data","values","point","x","date","y","value","slice","startDate","period","length","Alert","variant","Heading","height","width","xType","title","text","stroke","fill","fontWeight","filter","dateConverter","day","Date","getDate","month","getMonth","year","getFullYear","Api","App","getValutes","then","console","log","Container","Row","Col","Label","Group","as","xs","min","max","step","target","Control","Stack","gap","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","combineReducers","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa2db358.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport reactCSS from 'reactcss'\r\nimport './valute.css'\r\nimport {Card, Form} from 'react-bootstrap';\r\nimport {TwitterPicker} from 'react-color';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Valute extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            displayColorPicker: false,\r\n            color: {\r\n                r: '241',\r\n                g: '112',\r\n                b: '19',\r\n                a: '1'\r\n            }\r\n        };\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            displayColorPicker: !this.state.displayColorPicker\r\n        })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({displayColorPicker: false})\r\n    };\r\n\r\n    handleChange = (color) => {\r\n        this.setState({color: color.rgb})\r\n        this\r\n            .props\r\n            .dispatch({\r\n                type: 'valutes/setValuteColor',\r\n                payload: {\r\n                    charCode: this.props.charCode,\r\n                    color: color.hex\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const styles = reactCSS({\r\n            'default': {\r\n                color: {\r\n                    background: `rgba(${this.state.color.r}, ${this.state.color.g}, ${this.state.color.b}, ${this.state.color.a})`\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            <Card>\r\n                <Card.Body className='d-flex align-items-center justify-content-between'>\r\n                    <div className='position-relative'>\r\n                        <div className='swatch' onClick={this.handleClick}>\r\n                            <div style={styles.color}/>\r\n                        </div>\r\n                        {\r\n                            this.state.displayColorPicker\r\n                                ? <div className='popover'>\r\n                                        <div className='cover' onClick={this.handleClose}/>\r\n                                        <TwitterPicker color={this.state.color} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                    <span className=\"ms-4\">\r\n                        {this.props.name}</span>\r\n                    <Form.Check\r\n                        onChange={(e) => {\r\n                            this\r\n                                .props\r\n                                .dispatch({type: 'valutes/toggleValuteVisible', payload: this.props.charCode})\r\n                        }} checked={this.props.checked}/>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    state.valutes.forEach(valute => {\r\n        if (valute.color == '') {\r\n            valute.color = '#F17013'\r\n        }\r\n    });\r\n\r\n    return {valutes: state};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Valute);\r\n","import React, {Component} from 'react'\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport {\r\n    XYPlot,\r\n    LineSeries,\r\n    VerticalGridLines,\r\n    HorizontalGridLines,\r\n    XAxis,\r\n    YAxis\r\n} from 'react-vis';\r\nimport {Alert} from 'react-bootstrap';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Chart extends Component {\r\n    render() {\r\n        const series = this\r\n            .props\r\n            .chartData\r\n            .map(item => {\r\n                const data = item\r\n                    .values\r\n                    .map(point => {\r\n                        return {x: point.date, y: point.value}\r\n                    })\r\n                    .slice(this.props.startDate - 1, this.props.startDate + this.props.period - 1)\r\n                return <LineSeries key={item.charCode} data={data} color={item.color}/>\r\n            })\r\n\r\n        return (\r\n                series.length == 0\r\n                ? <Alert variant=\"warning\">\r\n                    <Alert.Heading>Выберите курс</Alert.Heading>\r\n                    <p>\r\n                        Данные не выбраны\r\n                    </p>\r\n                </Alert>\r\n                : <XYPlot height={700} width={800} xType='ordinal'>\r\n                    {\r\n                        series\r\n                        /* <LineSeries data={[{x: 'Данные отсутствуют', y:null}]} /> */\r\n                    }\r\n                    <VerticalGridLines/>\r\n                    <HorizontalGridLines/>\r\n                    <XAxis\r\n                        title='Дата'\r\n                        style={{\r\n                            text: {\r\n                                stroke: 'none',\r\n                                fill: 'white',\r\n                                fontWeight: 600\r\n                            },\r\n                            title: {\r\n                                stroke: 'none',\r\n                                fill: 'white',\r\n                                fontWeight: 600\r\n                            }\r\n                        }}/>\r\n                    <YAxis\r\n                        title='Курс'\r\n                        style={{\r\n                            text: {\r\n                                stroke: 'none',\r\n                                fill: 'white',\r\n                                fontWeight: 600\r\n                            },\r\n                            title: {\r\n                                stroke: 'none',\r\n                                fill: 'white',\r\n                                fontWeight: 600\r\n                            }\r\n                        }}/>\r\n                </XYPlot>\r\n            )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chartData: state\r\n            .valutes\r\n            .filter(valute => valute.checked),\r\n        period: state.date.period,\r\n        startDate: state.date.startDate\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chart);\r\n","export default [\r\n    {\r\n        \"name\": \"Австралийский доллар\",\r\n        \"charCode\": \"AUD\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 52.6975\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 52.6665\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 52.6319\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 51.7233\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 52.0991\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 52.6593\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 52.8475\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 53.3685\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 53.5145\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 53.803\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 53.7123\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 53.697\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 54.0292\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 53.2664\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 52.9851\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Азербайджанский манат\",\r\n        \"charCode\": \"AZN\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 43.3195\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 43.464\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 43.6374\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 43.3604\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 43.4035\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 43.5925\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 43.5401\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 44.0804\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 44.1329\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 44.4893\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 43.9084\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 43.7743\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 44.0451\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 43.2317\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 42.8262\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Фунт стерлингов Соединенного королевства\",\r\n        \"charCode\": \"GBP\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 97.1517\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 97.7638\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 98.4578\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 97.6341\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 97.9449\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 98.4158\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 98.3344\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 99.8843\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 99.9432\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 100.5613\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 99.5393\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 99.4734\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 100.186\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 98.5854\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 98.141\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Армянских драмов\",\r\n        \"charCode\": \"AMD\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 14.8686\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 15.0245\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 15.0921\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 14.9963\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 15.0342\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 15.216\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 15.2016\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 15.3902\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 15.5162\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 15.6414\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 15.4773\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 15.5396\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 15.7014\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 15.4049\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 15.2508\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Белорусский рубль\",\r\n        \"charCode\": \"BYN\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 29.0506\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 29.0592\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 29.0882\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 28.9661\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 29.004\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 29.0857\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 29.1124\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 29.4331\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 29.3586\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 29.4975\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 29.7142\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 29.6175\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 29.7889\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 29.4509\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 29.4868\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Болгарский лев\",\r\n        \"charCode\": \"BGN\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 42.5875\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 42.6039\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 42.8084\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 42.522\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 42.5889\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 42.8485\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 42.8168\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 43.411\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 43.1973\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 43.5536\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 42.7951\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 42.7453\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 43.0667\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 42.3322\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 42.1734\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Бразильский реал\",\r\n        \"charCode\": \"BRL\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 13.3015\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 13.1554\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 13.0308\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 13.0315\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 13.0594\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 13.0032\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 13.1524\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 13.3684\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 13.3662\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 13.578\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 13.3058\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 13.3483\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 13.3941\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 13.0839\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 13.0911\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Венгерских форинтов\",\r\n        \"charCode\": \"HUF\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 22.8486\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 22.6965\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 22.9319\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 22.8365\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 22.7653\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 23.1695\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 22.9471\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 23.1607\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 22.9562\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 23.0836\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 22.7812\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 22.7349\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 22.7248\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 22.5095\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 22.6792\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Гонконгских долларов\",\r\n        \"charCode\": \"HKD\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 94.3926\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 94.7062\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 95.0524\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 94.4552\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 94.6534\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 95.09\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 94.8952\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 96.0211\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 96.1367\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 96.9453\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 95.6832\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 95.4339\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 96.0157\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 94.2629\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 93.3752\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Датская крона\",\r\n        \"charCode\": \"DKK\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 11.2016\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 11.2063\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 11.2584\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 11.1844\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 11.2028\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 11.2687\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 11.262\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 11.4173\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 11.3609\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 11.4554\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 11.2557\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 11.2415\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 11.327\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 11.1334\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 11.0919\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Доллар США\",\r\n        \"charCode\": \"USD\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 73.5998\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 73.8453\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 74.1399\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 73.6694\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 73.7426\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 74.0637\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 73.9746\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 74.8926\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 74.9818\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 75.5873\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 74.6004\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 74.3726\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 74.8327\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 73.4506\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 72.7617\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Евро\",\r\n        \"charCode\": \"EUR\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 83.3444\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 83.364\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 83.7114\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 83.1138\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 83.2406\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 83.8105\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 83.8354\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 84.8234\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 84.482\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 84.9526\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 83.6793\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 83.6394\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 84.1718\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 82.7715\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 82.5845\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Индийских рупий\",\r\n        \"charCode\": \"INR\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 97.4541\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 97.7663\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 98.2701\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 97.7534\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 98.2331\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 98.8537\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 98.7151\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 99.7172\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 99.8825\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 10.0941\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 10.0088\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 99.9148\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 10.0561\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 98.7073\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 98.0444\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Казахстанских тенге\",\r\n        \"charCode\": \"KZT\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 16.902\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 16.9002\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 16.9773\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 16.8214\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 16.8113\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 16.7926\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 16.9569\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 17.0443\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 17.1152\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 17.3385\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 17.2327\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 17.188\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 17.2465\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 16.9456\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 16.8391\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Канадский доллар\",\r\n        \"charCode\": \"CAD\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 58.1036\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 58.3803\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 58.309\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 57.4824\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 57.535\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 57.8758\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 57.9284\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 58.5922\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 58.7908\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 59.2609\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 58.968\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 58.672\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 58.7845\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 58.1005\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 57.7474\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Киргизских сомов\",\r\n        \"charCode\": \"KGS\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 86.7652\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 87.0568\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 87.4071\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 86.852\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 86.9433\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 87.3145\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 87.2177\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 88.2884\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 88.42\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 89.1074\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 87.944\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 87.6754\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 88.2302\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 86.6085\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 85.7764\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Китайский юань\",\r\n        \"charCode\": \"CNY\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 11.6\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 11.622\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 11.6426\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 11.5622\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 11.578\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 11.6213\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 11.6128\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 11.7547\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 11.7482\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 11.8266\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 11.6758\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 11.6427\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 11.7212\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 11.5175\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 11.4016\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Молдавских леев\",\r\n        \"charCode\": \"MDL\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 41.6753\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 41.8712\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 42.0652\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 41.7154\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 41.5451\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 41.7143\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 41.7884\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 42.311\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 42.2909\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 42.5904\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 42.0284\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 41.9119\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 42.1949\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 41.4858\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 41.1315\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Норвежских крон\",\r\n        \"charCode\": \"NOK\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 82.4953\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 82.1352\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 81.9588\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 80.383\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 81.0189\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 81.6426\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 81.8213\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 82.9817\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 82.4039\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 83.1553\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 83.3152\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 83.4644\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 83.5214\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 82.4278\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 82.5187\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Польский злотый\",\r\n        \"charCode\": \"PLN\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 18.0688\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 18.1576\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 18.2193\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 18.1033\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 18.0689\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 18.2207\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 18.0303\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 18.1796\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 18.005\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 18.1008\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 17.9216\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 17.8399\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 17.8731\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 17.6086\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 17.6666\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Румынский лей\",\r\n        \"charCode\": \"RON\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 16.829\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 16.842\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 16.9219\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 16.8068\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 16.832\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 16.9288\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 16.9263\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 17.1505\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 17.0708\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 17.2134\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 16.9131\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 16.894\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 17.0183\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 16.7275\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 16.6663\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"СДР (специальные права заимствования)\",\r\n        \"charCode\": \"XDR\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 102.8314\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 103.105\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 103.6468\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 103.0325\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 103.2772\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 103.6521\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 103.6236\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 104.7029\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 104.5171\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 105.3611\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 103.9855\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 103.7319\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 104.5899\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 102.7221\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 101.9217\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Сингапурский доллар\",\r\n        \"charCode\": \"SGD\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 53.9509\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 54.0991\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 54.2792\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 53.7968\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 53.811\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 54.2075\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 54.2296\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 54.7661\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 54.7512\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 55.0767\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 54.5803\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 54.4455\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 54.8024\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 53.9404\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 53.5288\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Таджикских сомони\",\r\n        \"charCode\": \"TJS\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 65.2191\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 65.4077\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 65.6686\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 65.223\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 65.3167\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 65.6012\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 65.5222\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 66.3353\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 66.3849\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 66.9803\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 66.1058\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 65.9039\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 66.2529\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 65.0581\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 64.4194\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Турецких лир\",\r\n        \"charCode\": \"TRY\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 53.5193\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 54.0971\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 54.2327\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 53.689\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 53.5745\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 54.9626\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 54.4291\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 58.3507\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 59.6433\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 62.9333\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 62.249\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 57.9316\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 62.2532\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 65.9773\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 66.6255\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Новый туркменский манат\",\r\n        \"charCode\": \"TMT\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 21.0586\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 21.1288\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 21.2131\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 21.0785\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 21.0995\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 21.1913\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 21.1658\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 21.4285\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 21.454\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 21.6273\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 21.3449\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 21.2797\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 21.4114\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 21.0159\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 20.8188\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Узбекских сумов\",\r\n        \"charCode\": \"UZS\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 68.2602\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 68.4879\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 68.8407\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 68.3685\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 68.5323\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 68.7909\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 68.6472\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 69.4284\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 69.5755\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 70.2643\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 69.4254\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 69.0866\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 69.5728\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 68.3813\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 67.5715\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Украинских гривен\",\r\n        \"charCode\": \"UAH\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 27.1508\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 27.1148\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 27.1202\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 26.8797\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 27.0331\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 27.1119\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 27.2166\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 27.4319\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 27.6378\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 27.875\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 27.6116\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 27.6039\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 27.8816\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 27.5603\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 27.3877\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Чешских крон\",\r\n        \"charCode\": \"CZK\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 32.7576\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 32.7256\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 32.9072\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 32.7492\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 32.7076\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 32.9795\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 32.7967\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 33.1581\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 32.9185\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 33.1066\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 32.8231\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 32.7633\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 33.1162\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 32.5435\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 32.6044\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Шведских крон\",\r\n        \"charCode\": \"SEK\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 81.1733\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 81.3086\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 81.7626\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 80.6929\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 81.0189\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 81.5949\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 81.93\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 82.9578\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 81.9142\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 82.5099\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 82.0091\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 82.166\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 83.289\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 81.9962\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 81.7547\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Швейцарский франк\",\r\n        \"charCode\": \"CHF\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 79.8782\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 79.9192\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 80.2901\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 79.9798\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 80.0767\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 80.3555\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 80.4421\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 81.3608\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 81.0089\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 81.5045\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 79.9404\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 79.6366\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 80.3702\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 79.1238\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 78.4493\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Южноафриканских рэндов\",\r\n        \"charCode\": \"ZAR\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 46.8332\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 46.7443\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 46.594\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 46.0733\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 46.1312\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 46.4999\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 46.6528\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 46.4577\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 46.4243\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 46.2455\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 47.1063\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 46.9687\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 47.1631\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 46.6457\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 46.5559\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Вон Республики Корея\",\r\n        \"charCode\": \"KRW\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 62.6147\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 62.7078\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 62.9729\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 62.349\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 62.4331\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 63.063\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 62.7302\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 62.9188\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 62.8675\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 63.253\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 62.6894\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 62.6945\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 62.9688\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 61.8779\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 61.3821\r\n            }\r\n        ]\r\n    }, {\r\n        \"name\": \"Японских иен\",\r\n        \"charCode\": \"JPY\",\r\n        \"values\": [\r\n            {\r\n                \"date\": \"2021-12-10T11:30:00+03:00\",\r\n                \"value\": 64.8656\r\n            }, {\r\n                \"date\": \"2021-12-09T11:30:00+03:00\",\r\n                \"value\": 65.0362\r\n            }, {\r\n                \"date\": \"2021-12-08T11:30:00+03:00\",\r\n                \"value\": 65.2267\r\n            }, {\r\n                \"date\": \"2021-12-07T11:30:00+03:00\",\r\n                \"value\": 65.1106\r\n            }, {\r\n                \"date\": \"2021-12-04T11:30:00+03:00\",\r\n                \"value\": 64.9915\r\n            }, {\r\n                \"date\": \"2021-12-03T11:30:00+03:00\",\r\n                \"value\": 65.3897\r\n            }, {\r\n                \"date\": \"2021-12-02T11:30:00+03:00\",\r\n                \"value\": 65.2017\r\n            }, {\r\n                \"date\": \"2021-12-01T11:30:00+03:00\",\r\n                \"value\": 66.1976\r\n            }, {\r\n                \"date\": \"2021-11-30T11:30:00+03:00\",\r\n                \"value\": 66.1594\r\n            }, {\r\n                \"date\": \"2021-11-27T11:30:00+03:00\",\r\n                \"value\": 66.3978\r\n            }, {\r\n                \"date\": \"2021-11-26T11:30:00+03:00\",\r\n                \"value\": 64.6871\r\n            }, {\r\n                \"date\": \"2021-11-25T11:30:00+03:00\",\r\n                \"value\": 64.714\r\n            }, {\r\n                \"date\": \"2021-11-24T11:30:00+03:00\",\r\n                \"value\": 65.2734\r\n            }, {\r\n                \"date\": \"2021-11-23T11:30:00+03:00\",\r\n                \"value\": 64.357\r\n            }, {\r\n                \"date\": \"2021-11-20T11:30:00+03:00\",\r\n                \"value\": 63.5695\r\n            }\r\n        ]\r\n    }\r\n]","import data from './data'\r\n\r\nfunction dateConverter(date) {\r\n    date = new Date(date)\r\n    let day = date.getDate()\r\n    let month = date.getMonth() + 1\r\n    let year = date.getFullYear()\r\n\r\n    day = day < 10 ? '0' + day : day\r\n    month = month < 10 ? '0' + month : month\r\n    return `${day}.${month}.${year}`\r\n}\r\n\r\nasync function getValutePage(url) {\r\n    try {\r\n        const response = await fetch(url)\r\n        if (response.status == 200) {\r\n            const data = await response.json()\r\n            return [data.Valute, data.PreviousURL, data.Date]\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n        throw new Error(e)\r\n    }\r\n    return null\r\n}\r\n\r\nasync function buildValutesResponse() {\r\n    let [valute, url, date] = await getValutePage(\r\n        'https://www.cbr-xml-daily.ru/daily_json.js'\r\n    )\r\n    let mainValute = {}\r\n    for (let code in valute) {\r\n        mainValute[code] = {\r\n            name: valute[code].Name,\r\n            charCode: code,\r\n            values: [\r\n                {\r\n                    date: dateConverter(date),\r\n                    value: valute[code].Value\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    try {\r\n        for (let i = 0; i < 14; i++) {\r\n            url = url.substring(2, url.length)\r\n            let _url = 'https://' + url\r\n                .split('/')\r\n                .join('//')\r\n\r\n            let response = await getValutePage(_url) || await getValutePage(\r\n                'https://' + url\r\n            )\r\n\r\n            valute = response[0]\r\n            url = response[1]\r\n            date = response[2]\r\n\r\n            for (let code in valute) {\r\n                mainValute[code]\r\n                    .values\r\n                    .push({date: dateConverter(date), value: valute[code].Value})\r\n            }\r\n        }\r\n    } finally {\r\n\r\n        let valutes = []\r\n        for (let code in mainValute) {\r\n            valutes.push(mainValute[code])\r\n        }\r\n\r\n        return valutes\r\n    }\r\n}\r\n\r\n//buildValutesResponse().then(JSON.stringify).then(console.log)\r\n\r\nclass Api {\r\n    async getValutes() {\r\n        //return await buildValutesResponse()\r\n        data.forEach(valute => {\r\n            valute.values.forEach(item => item.date = dateConverter(item.date))\r\n        })\r\n        return data\r\n    }\r\n}\r\n\r\nexport default new Api","import {Container, Row, Col, Stack, Form} from 'react-bootstrap';\nimport React, {Component} from 'react'\nimport Valute from './Valute/Valute';\nimport Chart from './Chart/Chart';\nimport Api from './Store/api'\nimport {connect} from \"react-redux\";\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nclass App extends Component {\n\n    componentDidMount() {\n        Api\n            .getValutes()\n            .then(valutes => {\n                valutes.forEach(valute => {\n                    valute.color = '';\n                    valute.checked = false\n                })\n                this\n                    .props\n                    .dispatch({type: 'valutes/setValutes', payload: valutes})\n                this\n                    .props\n                    .dispatch({type: 'valutes/toggleValuteVisible', payload: valutes[0].charCode})\n            })\n    }\n\n    render() {\n        console.log(this.props.period)\n        return (\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col\">\n                        <Chart/>\n                    </Col>\n                    <Col className=\"col-md-4\">\n                    <div className='text-light'>\n                            <Form.Label>Выбор начальной даты</Form.Label>\n                            <Form>\n                                <Form.Group as={Row}>\n                                    <Col xs=\"9\">\n                                        <RangeSlider\n                                            value={this.props.startDate}\n                                            min={1}\n                                            max={15}\n                                            step={1}\n                                            onChange={(e) => this.props.dispatch({type: 'period/setStartDate', payload: e.target.value})}/>\n                                    </Col>\n                                    <Col xs=\"3\">\n                                        {this.props.valutes.length > 0 ? <Form.Control value={this.props.startDate - 1}/> : null}\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </div>\n                        <div className='text-light'>\n                            <Form.Label>Выбор периода</Form.Label>\n                            <Form>\n                                <Form.Group as={Row}>\n                                    <Col xs=\"9\">\n                                        <RangeSlider\n                                            value={this.props.period}\n                                            min={1}\n                                            max={7}\n                                            step={1}\n                                            onChange={(e) => this.props.dispatch({type: 'period/setPeriod', payload: e.target.value})}/>\n                                    </Col>\n                                    <Col xs=\"3\">\n                                        <Form.Control value={this.props.period}/>\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </div>\n                        <Stack\n                            className=\"mt-3\"\n                            gap={2}\n                            style={{\n                                overflowY: 'auto',\n                                height: '500px'\n                            }}>\n                            {\n                                this\n                                    .props\n                                    .valutes\n                                    .map(\n                                        valute => <Valute\n                                            key={valute.charCode}\n                                            charCode={valute.charCode}\n                                            name={valute.name}\n                                            checked={valute.checked}\n                                            color={valute.color}/>\n                                    )\n                            }\n                        </Stack>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {valutes: state.valutes, period: state.date.period, startDate: state.date.startDate};\n};\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = []\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    // The reducer normally looks at the action type field to decide what happens\r\n    switch (action.type) {\r\n\r\n        case 'valutes/setValutes':\r\n            {\r\n                return action.payload\r\n            }\r\n\r\n        case 'valutes/setValuteColor':\r\n            {\r\n                return state.map(valute => {\r\n                    if (valute.charCode == action.payload.charCode) {\r\n                        valute.color = action.payload.color\r\n                    }\r\n                    return valute\r\n                })\r\n            }\r\n\r\n        case 'valutes/toggleValuteVisible':\r\n            {\r\n                return state.map(valute => {\r\n                    if (valute.charCode == action.payload) {\r\n                        valute.checked = !valute.checked\r\n                    }\r\n                    return valute\r\n                })\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers } from 'redux'\r\nimport valutes from './valute-reducer'\r\nimport date from './date-reducer'\r\n\r\nconst store = createStore(combineReducers({\r\n    // Define a top-level state field named `todos`, handled by `todosReducer`\r\n    valutes,\r\n    date,\r\n  }))\r\n\r\nexport default store","\r\nexport default function appReducer(state = {period: 1, startDate: 1}, action) {\r\n    // The reducer normally looks at the action type field to decide what happens\r\n    switch (action.type) {\r\n\r\n        case 'period/setPeriod':\r\n            {\r\n                return {...state, period: +action.payload}\r\n            }\r\n        case 'period/setStartDate':\r\n            {\r\n                return {...state, startDate: +action.payload}\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport store from './Store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}